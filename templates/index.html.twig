<!DOCTYPE html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ config.page_title }}</title>
    <link rel="icon" href="{{ config.favicon }}">
    <link href="./vendor/twbs/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="./vendor/fortawesome/font-awesome/css/all.min.css" rel="stylesheet">
    <script src="./vendor/twbs/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <style>
        html {
            font-family: Arial, sans-serif;
            transition: background-color 0.3s ease, color 0.3s ease;
        }
        .card {
            overflow: auto;
            position: relative;
        }
        .card-body {
            padding: .9rem;
        }
        .glyph-auth {
            color: orange;
            display: inline;
        }
        .glyph-disabled {
            color: gray;
            display: inline;
        }
        .glyph-error {
            color: orange;
            display: inline;
        }
        .glyph-offline {
            color: red;
            display: inline;
        }
        .glyph-online {
            color: green;
            display: inline;
        }
        .group-title {
            margin-bottom: 1rem;
            margin-top: 2rem;
        }
        .invisible-placeholder {
            height: 1em;
            visibility: hidden;
        }
        .misc-text {
            color: var(--bs-body-color);
            font-size: 0.8em;
        }
        .navbar-brand {
            height: 30px;
            padding: 0;
            width: auto;
        }
        .navbar-brand img {
            height: 30px;
            width: auto;
        }
        .row-spacing {
            margin-bottom: 2rem;
        }
        .search-highlight {
            background-color: yellow;
        }
        .service-icon-container {
            align-items: center;
            display: flex;
        }
        .service-icon-img {
            display: block;
            height: 40px;
            width: auto;
        }
        .service-title {
            font-size: 1rem;
            max-width: 100%;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
        .service-title a {
            font-weight: bold;
            color: inherit;
            text-decoration: none;
        }
        .service-title a:hover {
            color: var(--bs-link-hover-color);
            text-decoration: underline;
        }
        .status-icon {
            font-size: 1em;
            position: absolute;
            right: 5px;
            top: 5px;
        }
        {% include 'style.css' ignore missing %}
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg bg-body-tertiary">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">
                <img src="{{ config.navbar_title_image }}" alt="Logo" class="d-inline-block align-text-top">
                {{ config.navbar_title }}
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto">
                    {% include 'header_links.html' ignore missing %}
                </ul>
                <div class="d-flex me-3">
                    <a class="nav-link" href="#" onclick="window.location.reload(true);" title="Reload">
                        <i class="fas fa-sync fa-spin"></i> Reload
                    </a>
                </div>
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" id="darkModeSwitch" aria-label="Switch between light and dark mode" data-bs-toggle="tooltip" data-bs-placement="top" title="Switch between light and dark mode">
                    <label class="form-check-label" for="darkModeSwitch">Dark Mode</label>
                </div>
            </div>
        </div>
    </nav>
    <div class="container mt-4">
        <div class="mb-3">
            <input type="text" class="form-control" id="serviceSearch" placeholder="Search for a service...">
        </div>

        {% for groupName, groupLinks in config.Groups %}
            <h3 class="group-title">{{ groupName }}</h3>
            <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-3 row-spacing">
                {% for linkId, service in groupLinks %}
                    <div class="col card-container">
                        <div class="card h-100">
                            <div class="card-body">
                                <div class="d-flex align-items-start">
                                    <a href="{{ service.href }}" target="{{ config.link_target }}" class="me-2 service-icon-container">
                                        <img src="{{ service.icon | default('./vendor/fortawesome/font-awesome/svgs/solid/user.svg') }}" alt="Icon" class="service-icon-img">
                                    </a>
                                    <div>
                                        <h5 class="service-title mb-1">
                                            <a href="{{ service.href }}" target="{{ config.link_target }}">
                                                {{ service.name }}
                                            </a>
                                        </h5>
                                        {% if service.misc %}
                                            <p class="misc-text mb-0">{{ service.misc|raw }}</p>
                                        {% else %}
                                            <p class="misc-text invisible-placeholder">&nbsp;</p>
                                        {% endif %}
                                    </div>
                                </div>
                            </div>
                            <div class="status-icon">
                                {% if service.stat %}
                                    {{ service.status|raw }}
                                {% else %}
                                    <span class="glyph-disabled" data-bs-toggle="tooltip" data-bs-title="Status check disabled"><i class="fas fa-circle-xmark"></i></span>
                                {% endif %}
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
        {% endfor %}
    </div>

    {% include 'footer.html' ignore missing %}

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            ////////////////////
            // Dark Mode Toggle
            ////////////////////
            const htmlElement = document.documentElement;
            const switchElement = document.getElementById('darkModeSwitch');
            const savedTheme = localStorage.getItem('bsTheme');
            const prefersDarkScheme = window.matchMedia("(prefers-color-scheme: dark)").matches;

            // Determine the current theme: use savedTheme, otherwise fallback to dark as default
            const currentTheme = savedTheme ? savedTheme : 'dark';

            // Apply the current theme
            htmlElement.setAttribute('data-bs-theme', currentTheme);
            switchElement.checked = currentTheme === 'dark';

            // Add event listener to toggle between light and dark mode
            switchElement.addEventListener('change', function () {
                const newTheme = this.checked ? 'dark' : 'light';
                htmlElement.setAttribute('data-bs-theme', newTheme);
                localStorage.setItem('bsTheme', newTheme);
            });

            ////////////////////
            // Tooltips
            ////////////////////
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            ////////////////////
            // Service Search
            ////////////////////
            const searchInput = document.getElementById('serviceSearch');
            const cards = document.querySelectorAll('.card-container');

            // Store original HTML content of each title
            cards.forEach(card => {
                const titleElement = card.querySelector('.service-title');
                titleElement.setAttribute('data-original-html', titleElement.innerHTML);
            });

            searchInput.addEventListener('keyup', function() {
                const filter = searchInput.value.toLowerCase();

                cards.forEach(card => {
                    const titleElement = card.querySelector('.service-title');
                    const linkElement = titleElement.querySelector('a');
                    const titleText = linkElement.textContent.toLowerCase();

                    if (titleText.includes(filter)) {
                        card.style.display = '';

                        // Highlight matching text
                        const originalHTML = titleElement.getAttribute('data-original-html');
                        const originalText = linkElement.textContent;
                        const startIndex = originalText.toLowerCase().indexOf(filter);

                        if (startIndex !== -1) {
                            const highlightedText = originalText.substring(0, startIndex) +
                                '<span class="search-highlight">' +
                                originalText.substring(startIndex, startIndex + filter.length) +
                                '</span>' +
                                originalText.substring(startIndex + filter.length);

                            // Update the link content while preserving the original icon
                            const iconElement = linkElement.querySelector('img');
                            linkElement.innerHTML = iconElement ? iconElement.outerHTML + ' ' + highlightedText : highlightedText;
                        }
                    } else {
                        card.style.display = 'none';
                    }

                    // If search is cleared, restore original content
                    if (filter === '') {
                        titleElement.innerHTML = titleElement.getAttribute('data-original-html');
                    }
                });
            });
        });
    </script>
    <noscript>
        <div class="alert alert-danger" role="alert">
            JavaScript is disabled, certain functions will not work.
        </div>
    </noscript>
</body>
</html>
